name: CI

on: workflow_dispatch

jobs:
  build:

    runs-on: ubuntu-latest
    timeout-minutes: 9999

    steps:
    - name: Setup files
      env: 
        SSHD_PORT: ${{ secrets.SSHD_PORT }}
        SSHD_USER: ${{ secrets.SSHD_USER }}
        SSHD_PASS: ${{ secrets.SSHD_PASS }}
        SSHD_KEY: ${{ secrets.SSHD_KEY }}
        CFD_CONFIG: ${{ secrets.CFD_CONFIG }}
        CFD_CERT: ${{ secrets.CFD_CERT }}
      run: |
        sudo mkdir -p /var/run/sshd
        echo "PasswordAuthentication yes" | sudo tee -a /etc/ssh/sshd_config
        echo "TCPKeepAlive yes" | sudo tee -a /etc/ssh/sshd_config
        sudo adduser $SSHD_USER --gecos "First Last,RoomNumber,WorkPhone,HomePhone" --disabled-password
        sudo usermod -aG sudo $SSHD_USER
        echo "$SSHD_USER:$SSHD_PASS" | sudo chpasswd
        echo "$SSHD_USER ALL=(ALL) NOPASSWD:ALL" | sudo EDITOR="tee -a" visudo
        sudo mkdir "/home/${SSHD_USER}/.ssh" && sudo chmod 755 "/home/${SSHD_USER}/.ssh"
        echo $SSHD_KEY | sudo tee "/home/${SSHD_USER}/.ssh/authorized_keys" && sudo chmod 600 "/home/${SSHD_USER}/.ssh/authorized_keys" && sudo chown $SSHD_USER:$SSHD_USER -R "/home/${SSHD_USER}/.ssh"
        sudo mkdir -p "/home/${SSHD_USER}/.config" && echo -e $CFD_CONFIG | base64 -d | sudo tee "/home/${SSHD_USER}/.config/site.yml" && echo -e $CFD_CERT | base64 -d | sudo tee "/home/${SSHD_USER}/.config/cert.pem" && sudo chown $SSHD_USER:$SSHD_USER -R "/home/${SSHD_USER}/.config"
        sudo service ssh restart
        sudo rm -rf "/usr/local/share/boost"
        sudo rm -rf "$AGENT_TOOLSDIRECTORY"
        sudo apt-get remove -y '^ghc-8.*'
        sudo apt-get remove -y '^dotnet-.*'
        sudo apt-get remove -y '^llvm-.*'
        sudo apt-get remove -y 'php.*'
        sudo apt-get remove -y azure-cli google-cloud-sdk hhvm google-chrome-stable firefox powershell mono-devel
        sudo apt-get autoremove -y
        sudo apt-get clean
        sudo rm -rf /usr/share/dotnet/
        curl -L https://storage.googleapis.com/addic7ed-subs.appspot.com/ffmpeg-libsvthevc-x265-linux64.tar.gz | sudo tar -xvz -C /usr/bin
        curl -OL https://downloads.rclone.org/v1.55.1/rclone-v1.55.1-linux-amd64.deb && sudo dpkg -i rclone-*.deb && rm rclone-*.deb
        curl -o cloudflared -L https://github.com/cloudflare/cloudflared/releases/download/2021.8.7/cloudflared-linux-amd64 && chmod +x cloudflared && sudo mv chisel /usr/bin
        sudo -u $SSHD_USER cloudflared tunnel --config "/home/${SSHD_USER}/.config/site.yml" --origincert "/home/${SSHD_USER}/.config/cert.pem" run